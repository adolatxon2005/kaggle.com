# -*- coding: utf-8 -*-
"""Untitled6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1m_uLDWVGzywtFXpx5M425T8s8832czBH
"""

# -*- coding: utf-8 -*-
"""shopping_trends

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/shopping-trends-ceb02f23-f9a7-40d6-8be5-fc2833977424.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20241210/auto/storage/goog4_request%26X-Goog-Date%3D20241210T083249Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D3327081698d0f927a34b9a8bccb30a03ea9f9912fbcf0b0b6ca7ab539e52ba79160bd31b506dec963b8b154d0086e4d1eeab50fd717a3c9ba391dc3e491ea21176a3b9e798855dbe19654899deb5342ea81e7c46987afb18d9cdb3a8bd184e5f8da721328bce0a7d7a16962090ac8d551ad84efe691fd641bac501bce5c8fd4ff371cec2f2a0dbd00faf7c0c899673c8be418fb700749575ca0e75a1432c82b61102dd7d4d0cd47623bb4d814011a44ec17dd6388be9ff9a738b7ecaeb9c756c63bb34be7be5676084aa340cbcd5b721dc4f2f8e81e654cb4cdcbca77d711e1f70d3d3e84a73122dd07e6feefdb368e902d724bf3a0eb6f36104e88138ac70e9
"""

# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES,
# THEN FEEL FREE TO DELETE THIS CELL.
# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON
# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR
# NOTEBOOK.
import kagglehub
bhadramohit_customer_shopping_latest_trends_dataset_path = kagglehub.dataset_download('bhadramohit/customer-shopping-latest-trends-dataset')

print('Data source import complete.')

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the read-only "../input/" directory
# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory

import os
for dirname, _, filenames in os.walk('/kaggle/input'):
    for filename in filenames:
        print(os.path.join(dirname, filename))

# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using "Save & Run All"
# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session

df = pd.read_csv('/kaggle/input/customer-shopping-latest-trends-dataset/shopping_trends.csv')
df.head(3)

df.shape

df.info()

df.isna().sum()

Item_Purchased=df['Item Purchased'].value_counts().reset_index()
Item_Purchased

import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

item = df.groupby('Item Purchased')['Purchase Amount (USD)'].sum().reset_index()
item

plt.figure(figsize=(12, 5))
sns.barplot(
    data=item,
    x='Item Purchased',
    y='Purchase Amount (USD)',
    palette='viridis')
plt.title('Item purchased by Amount (USD)')
plt.ylabel('Purchase Amount (USD)')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()

plt.figure(figsize=(12, 5))
sns.barplot(x='Item Purchased', y='Purchase Amount (USD)', data=item)
plt.xticks(rotation=90)
plt.xlabel('Item Purchased')
plt.ylabel('Total Purchase Amount')
plt.title('Total Purchase Amount by Item Purchased')
plt.show()

colors = {'background': '#FFFFFF','plot_bgcolor': '#F0F0F0'}

Numbers_Category = df['Category'].value_counts().head()
Numbers_Category

Numbers_Category_pie = px.pie(names=Numbers_Category.index,values=Numbers_Category,color_discrete_sequence=px.colors.qualitative.Set2_r,
                     title='Numbers of Categorys')
Numbers_Category_pie.update_traces(pull=[0.07,0,0,0,0])
Numbers_Category_pie.update_layout(paper_bgcolor=colors['background'],plot_bgcolor = colors['plot_bgcolor'],title_x=0.5)

df['Color'].value_counts()

df['Gender'].value_counts()

colors = ['#FF9999', '#66B3FF', '#99FF99', '#FFCC99']

def autopct_format(pct, all_vals):
    absolute = int(round(pct / 100.0 * sum(all_vals)))
    return f"{pct:.1f}%\n({absolute})"

counts = df['Gender'].value_counts()

counts.plot(kind='pie',autopct=lambda pct: autopct_format(pct, counts),colors=colors)
plt.title('Gender')
plt.tight_layout()
plt.show()

plt.figure(figsize=(12, 5))
sns.set(style="whitegrid")
sns.histplot(data=df, x='Age', color='blue', bins=20, kde=False)
plt.title('Histogram of Age', fontsize=16, fontweight='bold')
plt.xlabel('Age', fontsize=14)
plt.ylabel('Frequency', fontsize=14)

plt.tight_layout()
plt.show()

plt.figure(figsize=(12, 5))
sns.set(style="whitegrid")
sns.boxplot(x=df['Age'], color='lightblue')
plt.title('Boxplot of Age', fontsize=16, fontweight='bold')
plt.xlabel('Age', fontsize=14)

plt.tight_layout()
plt.show()